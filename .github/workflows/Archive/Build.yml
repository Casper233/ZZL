name: Build and Release - OLD

on: workflow_dispatch

permissions: write-all

jobs:
  Windows:
    strategy:
      fail-fast: false

      matrix:
        os:
          - windows-latest
        architecture:
          - x64
          - x86
          - arm64
        zzlversion: 
          - 1.0.0.3

    runs-on: ${{ matrix.os }}

    steps:

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Update Pip and Install Requirements
        run: |
          python -m pip install pip setuptools -U
          python -m pip install -r requirements.txt
          python -m pip uninstall numpy -y
          python -m pip uninstall scipy -y

      - name: Build on Windows
        run: >
          python -m nuitka
          --standalone
          --mingw64
          --output-dir=build
          --onefile
          --assume-yes-for-downloads
          --disable-console
          --product-name="ZZL"
          --file-version=${{ matrix.zzlversion }}
          --windows-icon-from-ico=ZZL.ico
          --product-version=${{ matrix. zzlversion }}
          --windows-file-description="School Work Helper"
          --follow-import-to=ZZL_Lib
          --lto=no
          --remove-output
          ZZL.py

      - name: Delete Useless Files and Compress with upx
        run: |
          cmd /K rmdir /s /q .\build\ZZL.dist\zstandard
          cmd /K del /f /q .\build\ZZL.dist\_asyncio.pyd
          cmd /K del /f /q .\build\ZZL.dist\_multiprocessing.pyd
          cmd /K del /f /q .\build\ZZL.dist\_queue.pyd
          cmd /K del /f /q .\build\ZZL.dist\pyexpat.pyd
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ZZL-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/*.exe

  Linux:
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
        architecture:
          - x64
          - x86
          - arm64
        zzlversion: 
          - 1.0.0.2

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Update Pip and Install Requirements
        run: |
          python -m pip install pip setuptools -U
          python -m pip install -r requirements.txt
          python -m pip uninstall numpy -y
          python -m pip uninstall scipy -y

      - name: Install Dependencies for Linux
        run: |
          sudo apt-get install -y libfuse2
          sudo apt-get install -y ccache
          sudo apt-get install -y upx-ucl

      - name: Build on Linux
        run: >
          python -m nuitka
          --clang
          --msvc=latest
          --standalone
          --assume-yes-for-downloads
          --onefile
          --disable-console
          --follow-import-to=ZZL_Lib
          --lto=no
          --output-dir=build
          --linux-icon=ZZL.ico
          --product-name="ZZL"
          --file-version=${{ matrix.zzlversion }}
          --product-version=${{ matrix.zzlversion }}
          --file-description="School Work Helper"
          --remove-output
          ZZL.py

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ZZL-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/*.bin

  Release:
    runs-on: ubuntu-latest

    needs:
      - Windows
      - Linux
    
    strategy:
      matrix:
        zzlversion: 
          - 1.0.0.3

    steps:

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: 'Asia/Shanghai'

      - name: Install Tools
        run: sudo apt install p7zip-full -y

      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          path: repo
          
      - name: Compress Artifacts
        run: |
          7z a -tzip "ZZL-${{ matrix.zzlversion }}-Windows-x64.zip" "./ZZL-Windows-x64/*"
          7z a -tzip "ZZL-${{ matrix.zzlversion }}-Windows-x86.zip" "./ZZL-Windows-x86/*"
          7z a -tzip "ZZL-${{ matrix.zzlversion }}-Windows-arm64.zip" "./ZZL-Windows-arm64/*"
          7z a -tzip "ZZL-${{ matrix.zzlversion }}-Linux-x64.zip" "./ZZL-Linux-x64/*"
          7z a -tzip "ZZL-${{ matrix.zzlversion }}-Linux-x86.zip" "./ZZL-Linux-x86/*"
          7z a -tzip "ZZL-${{ matrix.zzlversion }}-Linux-arm64.zip" "./ZZL-Linux-arm64/*"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./repo/ChangeLog.md
          prerelease: true
          draft: false
          tag_name: v${{ matrix.zzlversion }}
          files: |
            *.zip

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
